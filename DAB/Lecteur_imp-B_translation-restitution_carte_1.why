(*
Copyright 2012-2015 Consortium of the BWare ANR Project (ANR-12-INSE-0010)
	  	    <http://bware.lri.fr/>
Copyright 2012-2015 Cedric (CPR Team)
	  	    David DELAHAYE
	  	    <david.delahaye@cnam.fr>
Copyright 2012-2015 LRI (VALS team)
	  	    Sylvain CONCHON
	  	    <sylvain.conchon@lri.fr>
Copyright 2012-2015 Inria (Gallium, Deducteam)
	  	    Damien DOLIGEZ
	  	    <damien.doligez@inria.fr>
Copyright 2012-2015 Mitsubishi Electric R&D Centre Europe
	  	    David MENTRE
	  	    <d.mentre@fr.merce.mee.com>
Copyright 2012-2015 ClearSy
	  	    Thierry LECOMTE
	  	    <thierry.lecomte@clearsy.com>
Copyright 2012-2015 OCamlPro
	  	    Fabrice LE FESSANT
		    <fabrice.le_fessant@ocamlpro.com>

This file is a free software.

This software is governed by the CeCILL-B license under French law and 
abiding by the rules of distribution of free software.  
You can use, modify and/or redistribute the software under the terms of the 
CeCILL-B license as circulated by CEA, CNRS and INRIA at the following URL 
"http://www.cecill.info". 

As a counterpart to the access to the source code and rights to copy,
modify and redistribute granted by the license, users are provided only
with a limited warranty and the software's author, the holder of the
economic rights, and the successive licensors have only limited liability. 

In this respect, the user's attention is drawn to the risks associated
with loading, using, modifying and/or developing or reproducing the
software by the user in light of its specific status of free software,
that may mean that it is complicated to manipulate, and that also
therefore means that it is reserved for developers and experienced
professionals having in-depth computer knowledge. Users are therefore
encouraged to load and test the software's suitability as regards their
requirements in conditions enabling the security of their systems and/or 
data to be ensured and, more generally, to use and operate it in the 
same conditions as regards security. 

The fact that you are presently reading this means that you have had
knowledge of the CeCILL-B license and that you accept its terms.

--------------------------------------------------------------------------------
*)
logic safe_comp_div: int, int -> int
axiom safe_comp_div_def: forall x, y:int. x >= 0 and y > 0 -> safe_comp_div(x,y) = x / y
logic safe_comp_mod: int, int -> int
axiom safe_comp_mod_def: forall x, y:int. x >= 0 and y > 0 -> safe_comp_mod(x,y) = x % y
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function xorb(x: bool, y: bool) : bool = match_bool(y, match_bool(x, false,
  true), match_bool(x, true, false))

function notb(x: bool) : bool = match_bool(x, false, true)

function implb(x: bool, y: bool) : bool = match_bool(y, true, match_bool(x,
  false, true))

axiom CompatOrderMult :
  (forall x:int. forall y:int. forall z:int. ((x <= y) -> ((0 <= z) ->
  ((x * z) <= (y * z)))))

logic abs : int -> int

axiom abs_def106 : (forall x:int. ((0 <= x) -> (abs(x) = x)))

axiom abs_def107 : (forall x:int. ((not (0 <= x)) -> (abs(x) = (-x))))

axiom Abs_le159 :
  (forall x:int. forall y:int. ((abs(x) <= y) -> ((-y) <= x)))

axiom Abs_le160 : (forall x:int. forall y:int. ((abs(x) <= y) -> (x <= y)))

axiom Abs_le161 :
  (forall x:int. forall y:int. ((((-y) <= x) and (x <= y)) -> (abs(x) <= y)))

axiom Abs_pos : (forall x:int. (0 <= abs(x)))

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * safe_comp_div(x,y)) + safe_comp_mod(x,y)))))

axiom Div_bound106 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  (0 <= safe_comp_div(x,y))))

axiom Div_bound107 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  (safe_comp_div(x,y) <= x)))

axiom Mod_bound106 :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  ((-abs(y)) <  safe_comp_mod(x,y))))

axiom Mod_bound107 :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (safe_comp_mod(x,y) <  abs(y))))

axiom Div_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  (0 <= safe_comp_div(x,y))))

axiom Div_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (0 <  y)) ->
  (safe_comp_div(x,y) <= 0)))

axiom Mod_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (not (y = 0))) ->
  (0 <= safe_comp_mod(x,y))))

axiom Mod_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (not (y = 0))) ->
  (safe_comp_mod(x,y) <= 0)))

axiom Rounds_toward_zero :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (abs((safe_comp_div(x,y) * y)) <= abs(x))))

axiom Div_1 : (forall x:int. (safe_comp_div(x,1) = x))

axiom Mod_1 : (forall x:int. (safe_comp_mod(x,1) = 0))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) ->
  (safe_comp_div(x,y) = 0)))

axiom Mod_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) ->
  (safe_comp_mod(x,y) = x)))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [safe_comp_div(((x * y) + z),x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) ->
  (safe_comp_div(((x * y) + z),x) = (y + safe_comp_div(z,x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [safe_comp_mod(((x * y) + z),x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) ->
  (safe_comp_mod(((x * y) + z),x) = safe_comp_mod(z,x))))

type 'a set

logic mem : 'a, 'a set -> prop

predicate infix_eqeq(s1: 'a set, s2: 'a set) =
  (forall x:'a. (mem(x, s1) <-> mem(x, s2)))

axiom extensionality :
  (forall s1:'a set. forall s2:'a set. (infix_eqeq(s1, s2) -> (s1 = s2)))

predicate subset(s1: 'a set, s2: 'a set) =
  (forall x:'a. (mem(x, s1) -> mem(x, s2)))

axiom subset_refl : (forall s:'a set. subset(s, s))

axiom subset_trans :
  (forall s1:'a set. forall s2:'a set. forall s3:'a set. (subset(s1, s2) ->
  (subset(s2, s3) -> subset(s1, s3))))

logic empty : 'a set

predicate is_empty(s: 'a set) = (forall x:'a. (not mem(x, s)))

axiom empty_def1 : is_empty((empty : 'a set))

axiom mem_empty106 : (forall x:'a. (not mem(x, (empty : 'a set))))

axiom mem_empty107 : true

logic add : 'a, 'a set -> 'a set

axiom add_def1106 :
  (forall x:'a. forall y:'a.
  (forall s:'a set. (mem(x, add(y, s)) -> ((x = y) or mem(x, s)))))

axiom add_def1107 :
  (forall x:'a. forall y:'a.
  (forall s:'a set. (((x = y) or mem(x, s)) -> mem(x, add(y, s)))))

logic remove : 'a, 'a set -> 'a set

axiom remove_def1159 :
  (forall x:'a. forall y:'a. forall s:'a set. (mem(x, remove(y, s)) ->
  (not (x = y))))

axiom remove_def1160 :
  (forall x:'a. forall y:'a. forall s:'a set. (mem(x, remove(y, s)) -> mem(x,
  s)))

axiom remove_def1161 :
  (forall x:'a. forall y:'a. forall s:'a set. (((not (x = y)) and mem(x,
  s)) -> mem(x, remove(y, s))))

axiom add_remove :
  (forall x:'a. forall s:'a set. (mem(x, s) -> (add(x, remove(x, s)) = s)))

axiom remove_add :
  (forall x:'a. forall s:'a set. (remove(x, add(x, s)) = remove(x, s)))

axiom subset_remove : (forall x:'a. forall s:'a set. subset(remove(x, s), s))

logic union : 'a set, 'a set -> 'a set

axiom union_def1106 :
  (forall s1:'a set. forall s2:'a set. forall x:'a. (mem(x, union(s1, s2)) ->
  (mem(x, s1) or mem(x, s2))))

axiom union_def1107 :
  (forall s1:'a set. forall s2:'a set. forall x:'a. ((mem(x, s1) or mem(x,
  s2)) -> mem(x, union(s1, s2))))

logic inter : 'a set, 'a set -> 'a set

axiom inter_def1159 :
  (forall s1:'a set. forall s2:'a set. forall x:'a. (mem(x, inter(s1, s2)) ->
  mem(x, s1)))

axiom inter_def1160 :
  (forall s1:'a set. forall s2:'a set. forall x:'a. (mem(x, inter(s1, s2)) ->
  mem(x, s2)))

axiom inter_def1161 :
  (forall s1:'a set. forall s2:'a set. forall x:'a. ((mem(x, s1) and mem(x,
  s2)) -> mem(x, inter(s1, s2))))

logic diff : 'a set, 'a set -> 'a set

axiom diff_def1159 :
  (forall s1:'a set. forall s2:'a set. forall x:'a. (mem(x, diff(s1, s2)) ->
  mem(x, s1)))

axiom diff_def1160 :
  (forall s1:'a set. forall s2:'a set. forall x:'a. (mem(x, diff(s1, s2)) ->
  (not mem(x, s2))))

axiom diff_def1161 :
  (forall s1:'a set. forall s2:'a set. forall x:'a. ((mem(x, s1) and
  (not mem(x, s2))) -> mem(x, diff(s1, s2))))

axiom subset_diff :
  (forall s1:'a set. forall s2:'a set. subset(diff(s1, s2), s1))

logic choose : 'a set -> 'a

axiom choose_def :
  (forall s:'a set. ((not is_empty(s)) -> mem(choose(s), s)))

logic all : 'a set

axiom all_def : (forall x:'a. mem(x, (all : 'a set)))

logic b_bool : bool set

axiom mem_b_bool : (forall x:bool. mem(x, b_bool))

logic integer : int set

axiom mem_integer : (forall x:int. mem(x, integer))

logic natural : int set

axiom mem_natural205 : (forall x:int. (mem(x, natural) -> (0 <= x)))

axiom mem_natural206 : (forall x:int. ((0 <= x) -> mem(x, natural)))

logic natural1 : int set

axiom mem_natural1107 : (forall x:int. (mem(x, natural1) -> (0 <  x)))

axiom mem_natural1108 : (forall x:int. ((0 <  x) -> mem(x, natural1)))

logic nat : int set

axiom mem_nat258 : (forall x:int. (mem(x, nat) -> (0 <= x)))

axiom mem_nat259 : (forall x:int. (mem(x, nat) -> (x <= 2147483647)))

axiom mem_nat260 :
  (forall x:int. (((0 <= x) and (x <= 2147483647)) -> mem(x, nat)))

logic nat1 : int set

axiom mem_nat1160 : (forall x:int. (mem(x, nat1) -> (0 <  x)))

axiom mem_nat1161 : (forall x:int. (mem(x, nat1) -> (x <= 2147483647)))

axiom mem_nat1162 :
  (forall x:int. (((0 <  x) and (x <= 2147483647)) -> mem(x, nat1)))

logic bounded_int : int set

axiom mem_bounded_int159 :
  (forall x:int. (mem(x, bounded_int) -> ((-2147483647) <= x)))

axiom mem_bounded_int160 :
  (forall x:int. (mem(x, bounded_int) -> (x <= 2147483647)))

axiom mem_bounded_int161 :
  (forall x:int. ((((-2147483647) <= x) and (x <= 2147483647)) -> mem(x,
  bounded_int)))

logic mk : int, int -> int set

axiom mem_interval159 :
  (forall x:int. forall a:int. forall b:int [mem(x, mk(a, b))]. (mem(x, mk(a,
  b)) -> (a <= x)))

axiom mem_interval160 :
  (forall x:int. forall a:int. forall b:int [mem(x, mk(a, b))]. (mem(x, mk(a,
  b)) -> (x <= b)))

axiom mem_interval161 :
  (forall x:int. forall a:int. forall b:int [mem(x, mk(a, b))].
  (((a <= x) and (x <= b)) -> mem(x, mk(a, b))))

axiom interval_empty :
  (forall a:int. forall b:int. ((b <  a) -> (mk(a, b) = (empty : int set))))

axiom interval_add :
  (forall a:int. forall b:int. ((a <= b) -> (mk(a, b) = add(b, mk(a,
  (b - 1))))))

logic power : 'a set -> 'a set set

axiom mem_power106 :
  (forall x:'a set. forall y:'a set [mem(x, power(y))]. (mem(x, power(y)) ->
  subset(x, y)))

axiom mem_power107 :
  (forall x:'a set. forall y:'a set [mem(x, power(y))]. (subset(x, y) ->
  mem(x, power(y))))

logic non_empty_power : 'a set -> 'a set set

axiom mem_non_empty_power159 :
  (forall x:'a set. forall y:'a set [mem(x, non_empty_power(y))]. (mem(x,
  non_empty_power(y)) -> subset(x, y)))

axiom mem_non_empty_power160 :
  (forall x:'a set. forall y:'a set [mem(x, non_empty_power(y))]. (mem(x,
  non_empty_power(y)) -> (not (x = (empty : 'a set)))))

axiom mem_non_empty_power161 :
  (forall x:'a set. forall y:'a set [mem(x, non_empty_power(y))]. ((subset(x,
  y) and (not (x = (empty : 'a set)))) -> mem(x, non_empty_power(y))))

type ('a, 'a1) tuple2 = { Tuple2_proj_1 : 'a; Tuple2_proj_2 : 'a1
}

logic relation : 'a2 set, 'b set -> ('a2, 'b) tuple2 set set

axiom mem_relation159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  relation(s, t)) ->
  (forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  f) -> mem(x, s)))))

axiom mem_relation160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  relation(s, t)) ->
  (forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  f) -> mem(y, t)))))

axiom mem_relation161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  ((forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
   f) -> (mem(x, s) and mem(y, t)))) ->
  mem(f, relation(s, t))))

logic image : ('a, 'b) tuple2 set, 'a set -> 'b set

axiom mem_image106 :
  (forall r:('a, 'b) tuple2 set. forall dom1:'a set. forall y:'b [mem(y,
  image(r, dom1))]. (mem(y, image(r, dom1)) ->
  (exists x:'a. (mem(x, dom1) and mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y
  }, r)))))

axiom mem_image107 :
  (forall r:('a, 'b) tuple2 set. forall dom1:'a set. forall y:'b [mem(y,
  image(r, dom1))].
  ((exists x:'a. (mem(x, dom1) and mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y
   }, r))) ->
  mem(y, image(r, dom1))))

axiom image_union :
  (forall r:('a, 'b) tuple2 set. forall s:'a set. forall t:'a set. (image(r,
  union(s, t)) = union(image(r, s), image(r, t))))

axiom image_add :
  (forall r:('a, 'b) tuple2 set. forall dom1:'a set. forall x:'a. (image(r,
  add(x, dom1)) = union(image(r, add(x, (empty : 'a set))), image(r, dom1))))

logic infix_plmngt : 'a set, 'b set -> ('a, 'b) tuple2 set set

axiom mem_function212 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_plmngt(s, t)) ->
  (forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  f) -> mem(x, s)))))

axiom mem_function213 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_plmngt(s, t)) ->
  (forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  f) -> mem(y, t)))))

axiom mem_function214 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_plmngt(s, t)) ->
  (forall x:'a. forall y1:'b. forall y2:'b. ((mem({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = y1 }, f) and mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y2 },
  f)) -> (y1 = y2)))))

axiom mem_function215 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  (((forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
    f) -> (mem(x, s) and mem(y, t)))) and
  (forall x:'a. forall y1:'b. forall y2:'b. ((mem({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = y1 }, f) and mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y2 },
  f)) -> (y1 = y2)))) -> mem(f, infix_plmngt(s, t))))

axiom domain_function :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  forall x:'a. forall y:'b. (mem(f, infix_plmngt(s, t)) -> (mem({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, f) -> mem(x, s))))

axiom range_function :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  forall x:'a. forall y:'b. (mem(f, infix_plmngt(s, t)) -> (mem({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, f) -> mem(y, t))))

axiom function_extend_range :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  forall u:'b set. (subset(t, u) -> (mem(f, infix_plmngt(s, t)) -> mem(f,
  infix_plmngt(s, u)))))

axiom function_reduce_range :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  forall u:'b set. (subset(u, t) -> (mem(f, infix_plmngt(s, t)) ->
  ((forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
   f) -> mem(y, u))) ->
  mem(f, infix_plmngt(s, u))))))

logic inverse : ('a, 'b) tuple2 set -> ('b, 'a) tuple2 set

axiom Inverse_def106 :
  (forall r:('a, 'b) tuple2 set.
  (forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = y; Tuple2_proj_2 = x },
  inverse(r)) -> mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, r))))

axiom Inverse_def107 :
  (forall r:('a, 'b) tuple2 set.
  (forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  r) -> mem({ Tuple2_proj_1 = y; Tuple2_proj_2 = x }, inverse(r)))))

logic dom : ('a, 'b) tuple2 set -> 'a set

axiom dom_def106 :
  (forall r:('a, 'b) tuple2 set.
  (forall x:'a. (mem(x, dom(r)) ->
  (exists y:'b. mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, r)))))

axiom dom_def107 :
  (forall r:('a, 'b) tuple2 set.
  (forall x:'a.
  ((exists y:'b. mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, r)) -> mem(x,
  dom(r)))))

logic ran : ('a, 'b) tuple2 set -> 'b set

axiom ran_def106 :
  (forall r:('a, 'b) tuple2 set.
  (forall y:'b. (mem(y, ran(r)) ->
  (exists x:'a. mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, r)))))

axiom ran_def107 :
  (forall r:('a, 'b) tuple2 set.
  (forall y:'b.
  ((exists x:'a. mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, r)) -> mem(y,
  ran(r)))))

axiom dom_empty : (dom((empty : ('a, 'b) tuple2 set)) = (empty : 'a set))

axiom dom_add :
  (forall f:('a, 'b) tuple2 set. forall x:'a. forall y:'b. (dom(add({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, f)) = add(x, dom(f))))

axiom dom_singleton :
  (forall x:'a. forall y:'b. (dom(add({ Tuple2_proj_1 = x; Tuple2_proj_2 = y
  }, (empty : ('a, 'b) tuple2 set))) = add(x, (empty : 'a set))))

logic infix_mnmngt : 'a set, 'b set -> ('a, 'b) tuple2 set set

axiom mem_total_functions159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_mnmngt(s, t)) -> mem(f, infix_plmngt(s, t))))

axiom mem_total_functions160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_mnmngt(s, t)) -> (dom(f) = s)))

axiom mem_total_functions161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. ((mem(f,
  infix_plmngt(s, t)) and (dom(f) = s)) -> mem(f, infix_mnmngt(s, t))))

axiom total_function_is_function :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set [mem(f,
  infix_mnmngt(s, t))]. (mem(f, infix_mnmngt(s, t)) -> mem(f, infix_plmngt(s,
  t))))

axiom singleton_is_partial_function :
  (forall s:'a set. forall t:'b set. forall x:'a. forall y:'b. ((mem(x,
  s) and mem(y, t)) -> mem(add({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  (empty : ('a, 'b) tuple2 set)), infix_plmngt(s, t))))

axiom singleton_is_function :
  (forall x:'a. forall y:'b [add({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  (empty : ('a, 'b) tuple2 set))]. mem(add({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = y }, (empty : ('a, 'b) tuple2 set)), infix_mnmngt(add(x,
  (empty : 'a set)), add(y, (empty : 'b set)))))

logic apply : ('a, 'b) tuple2 set, 'a -> 'b

axiom apply_def0 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  forall a1:'a. ((mem(f, infix_plmngt(s, t)) and mem(a1, dom(f))) -> mem({
  Tuple2_proj_1 = a1; Tuple2_proj_2 = apply(f, a1) }, f)))

axiom apply_def1 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  forall a1:'a. ((mem(f, infix_mnmngt(s, t)) and mem(a1, s)) -> mem({
  Tuple2_proj_1 = a1; Tuple2_proj_2 = apply(f, a1) }, f)))

axiom apply_def2 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  forall a1:'a. forall b1:'b. ((mem(f, infix_plmngt(s, t)) and mem({
  Tuple2_proj_1 = a1; Tuple2_proj_2 = b1 }, f)) -> (apply(f, a1) = b1)))

axiom apply_singleton :
  (forall x:'a. forall y:'b. (apply(add({ Tuple2_proj_1 = x; Tuple2_proj_2 =
  y }, (empty : ('a, 'b) tuple2 set)), x) = y))

axiom apply_range :
  (forall x:'a. forall f:('a, 'b) tuple2 set. forall s:'a set.
  forall t:'b set [mem(f, infix_plmngt(s, t)), apply(f, x)]. ((mem(f,
  infix_plmngt(s, t)) and mem(x, dom(f))) -> mem(apply(f, x), t)))

logic semicolon : ('a, 'b) tuple2 set, ('b, 'c) tuple2 set -> ('a,
  'c) tuple2 set

axiom semicolon_def106 :
  (forall x:'a. forall z:'c. forall p:('a, 'b) tuple2 set. forall q:('b,
  'c) tuple2 set. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = z }, semicolon(p,
  q)) ->
  (exists y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, p) and mem({
  Tuple2_proj_1 = y; Tuple2_proj_2 = z }, q)))))

axiom semicolon_def107 :
  (forall x:'a. forall z:'c. forall p:('a, 'b) tuple2 set. forall q:('b,
  'c) tuple2 set.
  ((exists y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, p) and mem({
   Tuple2_proj_1 = y; Tuple2_proj_2 = z }, q))) ->
  mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = z }, semicolon(p, q))))

logic direct_product : ('a, 'b) tuple2 set, ('a, 'c) tuple2 set -> ('a, ('b,
  'c) tuple2) tuple2 set

axiom direct_product_def106 :
  (forall e:('t, ('u, 'v) tuple2) tuple2. forall r1:('t, 'u) tuple2 set.
  forall r2:('t, 'v) tuple2 set [mem(e, direct_product(r1, r2))]. (mem(e,
  direct_product(r1, r2)) ->
  (exists x:'t. exists y:'u. exists z:'v. (({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = { Tuple2_proj_1 = y; Tuple2_proj_2 = z } } = e) and (mem({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, r1) and mem({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = z }, r2))))))

axiom direct_product_def107 :
  (forall e:('t, ('u, 'v) tuple2) tuple2. forall r1:('t, 'u) tuple2 set.
  forall r2:('t, 'v) tuple2 set [mem(e, direct_product(r1, r2))].
  ((exists x:'t. exists y:'u. exists z:'v. (({ Tuple2_proj_1 = x;
   Tuple2_proj_2 = { Tuple2_proj_1 = y; Tuple2_proj_2 = z } } = e) and (mem({
   Tuple2_proj_1 = x; Tuple2_proj_2 = y }, r1) and mem({ Tuple2_proj_1 = x;
   Tuple2_proj_2 = z }, r2)))) ->
  mem(e, direct_product(r1, r2))))

logic parallel_product : ('a, 'b) tuple2 set, ('c, 'd) tuple2 set -> (('a,
  'c) tuple2, ('b, 'd) tuple2) tuple2 set

axiom parallel_product_def106 :
  (forall e:(('t, 'v) tuple2, ('u, 'w) tuple2) tuple2. forall r1:('t,
  'u) tuple2 set. forall r2:('v, 'w) tuple2 set. (mem(e, parallel_product(r1,
  r2)) ->
  (exists x:'t. exists y:'v. exists z:'u. exists a:'w. (({ Tuple2_proj_1 = {
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }; Tuple2_proj_2 = { Tuple2_proj_1 =
  z; Tuple2_proj_2 = a } } = e) and (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 =
  z }, r1) and mem({ Tuple2_proj_1 = y; Tuple2_proj_2 = a }, r2))))))

axiom parallel_product_def107 :
  (forall e:(('t, 'v) tuple2, ('u, 'w) tuple2) tuple2. forall r1:('t,
  'u) tuple2 set. forall r2:('v, 'w) tuple2 set.
  ((exists x:'t. exists y:'v. exists z:'u. exists a:'w. (({ Tuple2_proj_1 = {
   Tuple2_proj_1 = x; Tuple2_proj_2 = y }; Tuple2_proj_2 = { Tuple2_proj_1 =
   z; Tuple2_proj_2 = a } } = e) and (mem({ Tuple2_proj_1 = x;
   Tuple2_proj_2 = z }, r1) and mem({ Tuple2_proj_1 = y; Tuple2_proj_2 = a },
   r2)))) ->
  mem(e, parallel_product(r1, r2))))

axiom semicolon_dom :
  (forall f:('a, 'b) tuple2 set. forall g:('b, 'c) tuple2 set.
  subset(dom(semicolon(f, g)), dom(f)))

axiom semicolon_is_function :
  (forall f:('a, 'b) tuple2 set. forall g:('b, 'c) tuple2 set.
  forall s:'a set. forall t:'b set. forall u:'c set. ((mem(f, infix_plmngt(s,
  t)) and mem(g, infix_plmngt(t, u))) -> mem(semicolon(f, g), infix_plmngt(s,
  u))))

axiom apply_compose :
  (forall x:'a. forall f:('a, 'b) tuple2 set. forall g:('b, 'c) tuple2 set.
  forall s:'a set. forall t:'b set. forall u:'c set. ((mem(f, infix_plmngt(s,
  t)) and (mem(g, infix_plmngt(t, u)) and (mem(x, dom(f)) and mem(apply(f,
  x), dom(g))))) -> (apply(semicolon(f, g), x) = apply(g, apply(f, x)))))

logic infix_gtplgt : 'a set, 'b set -> ('a, 'b) tuple2 set set

axiom mem_partial_injection159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtplgt(s, t)) -> mem(f, infix_plmngt(s, t))))

axiom mem_partial_injection160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtplgt(s, t)) -> mem(inverse(f), infix_plmngt(t, s))))

axiom mem_partial_injection161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. ((mem(f,
  infix_plmngt(s, t)) and mem(inverse(f), infix_plmngt(t, s))) -> mem(f,
  infix_gtplgt(s, t))))

logic infix_gtmngt : 'a set, 'b set -> ('a, 'b) tuple2 set set

axiom mem_total_injection159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtmngt(s, t)) -> mem(f, infix_gtplgt(s, t))))

axiom mem_total_injection160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtmngt(s, t)) -> mem(f, infix_mnmngt(s, t))))

axiom mem_total_injection161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. ((mem(f,
  infix_gtplgt(s, t)) and mem(f, infix_mnmngt(s, t))) -> mem(f,
  infix_gtmngt(s, t))))

axiom mem_total_injection_alt159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtmngt(s, t)) -> mem(f, infix_mnmngt(s, t))))

axiom mem_total_injection_alt160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtmngt(s, t)) -> mem(inverse(f), infix_plmngt(t, s))))

axiom mem_total_injection_alt161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. ((mem(f,
  infix_mnmngt(s, t)) and mem(inverse(f), infix_plmngt(t, s))) -> mem(f,
  infix_gtmngt(s, t))))

axiom injection :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set.
  (forall x:'a. forall y:'a. (mem(f, infix_gtmngt(s, t)) -> (mem(x, s) ->
  (mem(y, s) -> ((apply(f, x) = apply(f, y)) -> (x = y)))))))

logic infix_plmngtgt : 'a set, 'b set -> ('a, 'b) tuple2 set set

axiom mem_partial_surjection159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_plmngtgt(s, t)) -> mem(f, infix_plmngt(s, t))))

axiom mem_partial_surjection160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_plmngtgt(s, t)) -> (ran(f) = t)))

axiom mem_partial_surjection161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. ((mem(f,
  infix_plmngt(s, t)) and (ran(f) = t)) -> mem(f, infix_plmngtgt(s, t))))

logic infix_mnmngtgt : 'a set, 'b set -> ('a, 'b) tuple2 set set

axiom mem_total_surjection159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_mnmngtgt(s, t)) -> mem(f, infix_plmngtgt(s, t))))

axiom mem_total_surjection160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_mnmngtgt(s, t)) -> mem(f, infix_mnmngt(s, t))))

axiom mem_total_surjection161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. ((mem(f,
  infix_plmngtgt(s, t)) and mem(f, infix_mnmngt(s, t))) -> mem(f,
  infix_mnmngtgt(s, t))))

logic infix_gtplgtgt : 'a set, 'b set -> ('a, 'b) tuple2 set set

axiom mem_partial_bijection159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtplgtgt(s, t)) -> mem(f, infix_gtplgt(s, t))))

axiom mem_partial_bijection160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtplgtgt(s, t)) -> mem(f, infix_plmngtgt(s, t))))

axiom mem_partial_bijection161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. ((mem(f,
  infix_gtplgt(s, t)) and mem(f, infix_plmngtgt(s, t))) -> mem(f,
  infix_gtplgtgt(s, t))))

logic infix_gtmngtgt : 'a set, 'b set -> ('a, 'b) tuple2 set set

axiom mem_total_bijection159 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtmngtgt(s, t)) -> mem(f, infix_gtmngt(s, t))))

axiom mem_total_bijection160 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. (mem(f,
  infix_gtmngtgt(s, t)) -> mem(f, infix_mnmngtgt(s, t))))

axiom mem_total_bijection161 :
  (forall f:('a, 'b) tuple2 set. forall s:'a set. forall t:'b set. ((mem(f,
  infix_gtmngt(s, t)) and mem(f, infix_mnmngtgt(s, t))) -> mem(f,
  infix_gtmngtgt(s, t))))

logic id : 'a set -> ('a, 'a) tuple2 set

axiom id_def159 :
  (forall x:'a. forall y:'a. forall s:'a set. (mem({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = y }, id(s)) -> mem(x, s)))

axiom id_def160 :
  (forall x:'a. forall y:'a. forall s:'a set. (mem({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = y }, id(s)) -> (x = y)))

axiom id_def161 :
  (forall x:'a. forall y:'a. forall s:'a set. ((mem(x, s) and (x = y)) ->
  mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, id(s))))

axiom id_dom : (forall s:'a set. (dom(id(s)) = s))

axiom id_ran : (forall s:'a set. (ran(id(s)) = s))

axiom id_fun : (forall s:'a set. mem(id(s), infix_plmngt(s, s)))

axiom id_total_fun : (forall s:'a set. mem(id(s), infix_mnmngt(s, s)))

function seq_length(n: int, s: 'a set) : (int, 'a) tuple2 set set =
  infix_mnmngt(mk(1, n), s)

axiom length_uniq :
  (forall n1:int. forall n2:int. forall s1:'a set. forall s2:'a set.
  forall r:(int, 'a) tuple2 set. (((0 <= n1) and mem(r, seq_length(n1,
  s1))) -> (((0 <= n2) and mem(r, seq_length(n2, s2))) -> (n1 = n2))))

logic size : (int, 'a) tuple2 set -> int

axiom size_def :
  (forall n:int. forall s:'a set. forall r:(int, 'a) tuple2 set.
  (((0 <= n) and mem(r, seq_length(n, s))) -> (size(r) = n)))

logic seq : 'a set -> (int, 'a) tuple2 set set

axiom seq_def159 :
  (forall s:'a set. forall r:(int, 'a) tuple2 set. (mem(r, seq(s)) ->
  (0 <= size(r))))

axiom seq_def160 :
  (forall s:'a set. forall r:(int, 'a) tuple2 set. (mem(r, seq(s)) -> mem(r,
  seq_length(size(r), s))))

axiom seq_def161 :
  (forall s:'a set. forall r:(int, 'a) tuple2 set. (((0 <= size(r)) and
  mem(r, seq_length(size(r), s))) -> mem(r, seq(s))))

axiom seq_as_total_function :
  (forall s:'a set. forall r:(int, 'a) tuple2 set. (mem(r, seq(s)) -> mem(r,
  infix_mnmngt(mk(1, size(r)), s))))

logic seq1 : 'a set -> (int, 'a) tuple2 set set

logic iseq : 'a set -> (int, 'a) tuple2 set set

logic iseq1 : 'a set -> (int, 'a) tuple2 set set

logic perm : 'a set -> (int, 'a) tuple2 set set

logic is_finite_subset : 'a set, 'a set, int -> prop

axiom Empty : (forall s:'a set. is_finite_subset((empty : 'a set), s, 0))

axiom Add_mem :
  (forall x:'a. forall s1:'a set. forall s2:'a set. forall c:int.
  (is_finite_subset(s1, s2, c) -> (mem(x, s2) -> (mem(x, s1) ->
  is_finite_subset(add(x, s1), s2, c)))))

axiom Add_notmem :
  (forall x:'a. forall s1:'a set. forall s2:'a set. forall c:int.
  (is_finite_subset(s1, s2, c) -> (mem(x, s2) -> ((not mem(x, s1)) ->
  is_finite_subset(add(x, s1), s2, (c + 1))))))

axiom is_finite_subset_inversion :
  (forall z:'a set. forall z1:'a set. forall z2:int. (is_finite_subset(z, z1,
  z2) ->
  (((exists s:'a set. (((z = (empty : 'a set)) and (z1 = s)) and (z2 = 0))) or
  (exists x:'a. exists s1:'a set. exists s2:'a set. exists c:int.
  (is_finite_subset(s1, s2, c) and (mem(x, s2) and (mem(x, s1) and
  (((z = add(x, s1)) and (z1 = s2)) and (z2 = c))))))) or
  (exists x:'a. exists s1:'a set. exists s2:'a set. exists c:int.
  (is_finite_subset(s1, s2, c) and (mem(x, s2) and ((not mem(x, s1)) and
  (((z = add(x, s1)) and (z1 = s2)) and (z2 = (c + 1))))))))))

axiom finite_interval :
  (forall a:int. forall b:int. ((a <= b) -> is_finite_subset(mk(a, b),
  integer, ((b - a) + 1))))

axiom finite_interval_empty :
  (forall a:int. forall b:int. ((b <  a) -> is_finite_subset(mk(a, b),
  integer, 0)))

logic finite_subsets : 'a set -> 'a set set

axiom finite_subsets_def106 :
  (forall s:'a set. forall x:'a set. (mem(x, finite_subsets(s)) ->
  (exists c:int. is_finite_subset(x, s, c))))

axiom finite_subsets_def107 :
  (forall s:'a set. forall x:'a set.
  ((exists c:int. is_finite_subset(x, s, c)) -> mem(x, finite_subsets(s))))

axiom finite_Empty :
  (forall s:'a set. mem((empty : 'a set), finite_subsets(s)))

axiom finite_Add :
  (forall x:'a. forall s1:'a set. forall s2:'a set. (mem(s1,
  finite_subsets(s2)) -> (mem(x, s2) -> mem(add(x, s1),
  finite_subsets(s2)))))

axiom finite_Union :
  (forall s1:'a set. forall s2:'a set. forall s3:'a set. (mem(s1,
  finite_subsets(s3)) -> (mem(s2, finite_subsets(s3)) -> mem(union(s1, s2),
  finite_subsets(s3)))))

axiom finite_inversion :
  (forall s1:'a set. forall s2:'a set. (mem(s1, finite_subsets(s2)) ->
  ((s1 = (empty : 'a set)) or
  (exists x:'a. exists s3:'a set. ((s1 = add(x, s3)) and mem(s3,
  finite_subsets(s2)))))))

logic non_empty_finite_subsets : 'a set -> 'a set set

axiom non_empty_finite_subsets_def106 :
  (forall s:'a set. forall x:'a set. (mem(x, non_empty_finite_subsets(s)) ->
  (exists c:int. (is_finite_subset(x, s, c) and
  (not (x = (empty : 'a set)))))))

axiom non_empty_finite_subsets_def107 :
  (forall s:'a set. forall x:'a set.
  ((exists c:int. (is_finite_subset(x, s, c) and
   (not (x = (empty : 'a set))))) ->
  mem(x, non_empty_finite_subsets(s))))

axiom card_non_neg :
  (forall s:'a set. forall x:'a set. forall c:int. (is_finite_subset(x, s,
  c) -> (0 <= c)))

axiom card_unique :
  (forall s:'a set. forall x:'a set. forall c1:int. forall c2:int.
  (is_finite_subset(x, s, c1) -> (is_finite_subset(x, s, c2) -> (c1 = c2))))

logic card : 'a set -> int

axiom card_def :
  (forall s:'a set. forall x:'a set. forall c:int. (is_finite_subset(x, s,
  c) -> (card(x) = c)))

axiom card_Empty : (card((empty : 'a set)) = 0)

axiom card_Add_not_mem :
  (forall x:'a. forall s1:'a set. forall s2:'a set [mem(s1,
  finite_subsets(s2)), card(add(x, s1))]. (mem(s1, finite_subsets(s2)) ->
  ((not mem(x, s1)) -> (card(add(x, s1)) = (card(s1) + 1)))))

axiom card_Add_mem :
  (forall x:'a. forall s1:'a set. forall s2:'a set [mem(s1,
  finite_subsets(s2)), card(add(x, s1))]. (mem(s1, finite_subsets(s2)) ->
  (mem(x, s1) -> (card(add(x, s1)) = card(s1)))))

axiom card_Union :
  (forall s1:'a set. forall s2:'a set. forall s3:'a set [mem(s1,
  finite_subsets(s3)), mem(s2, finite_subsets(s3)), card(union(s1, s2))].
  (mem(s1, finite_subsets(s3)) -> (mem(s2, finite_subsets(s3)) ->
  (is_empty(inter(s1, s2)) -> (card(union(s1,
  s2)) = (card(s1) + card(s2)))))))

logic times : 'a set, 'b set -> ('a, 'b) tuple2 set

axiom times_def159 :
  (forall a:'a1 set. forall b:'b1 set. forall x:'a1. forall y:'b1 [mem({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, times(a, b))]. (mem({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, times(a, b)) -> mem(x, a)))

axiom times_def160 :
  (forall a:'a1 set. forall b:'b1 set. forall x:'a1. forall y:'b1 [mem({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, times(a, b))]. (mem({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, times(a, b)) -> mem(y, b)))

axiom times_def161 :
  (forall a:'a1 set. forall b:'b1 set. forall x:'a1. forall y:'b1 [mem({
  Tuple2_proj_1 = x; Tuple2_proj_2 = y }, times(a, b))]. ((mem(x, a) and
  mem(y, b)) -> mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, times(a, b))))

function relations(u: 'a set, v: 'b set) : ('a, 'b) tuple2 set set =
  power(times(u, v))

axiom break_mem_in_add106 :
  (forall c:('a, 'b) tuple2. forall s:('a, 'b) tuple2 set. forall x:'a.
  forall y:'b. (mem(c, add({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, s)) ->
  ((c = { Tuple2_proj_1 = x; Tuple2_proj_2 = y }) or mem(c, s))))

axiom break_mem_in_add107 :
  (forall c:('a, 'b) tuple2. forall s:('a, 'b) tuple2 set. forall x:'a.
  forall y:'b. (((c = { Tuple2_proj_1 = x; Tuple2_proj_2 = y }) or mem(c,
  s)) -> mem(c, add({ Tuple2_proj_1 = x; Tuple2_proj_2 = y }, s))))

axiom break_power_times106 :
  (forall r:('a, 'b) tuple2 set. forall u:'a set. forall v:'b set. (mem(r,
  power(times(u, v))) -> subset(r, times(u, v))))

axiom break_power_times107 :
  (forall r:('a, 'b) tuple2 set. forall u:'a set. forall v:'b set. (subset(r,
  times(u, v)) -> mem(r, power(times(u, v)))))

axiom subset_of_times159 :
  (forall r:('a, 'b) tuple2 set. forall u:'a set. forall v:'b set. (subset(r,
  times(u, v)) ->
  (forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  r) -> mem(x, u)))))

axiom subset_of_times160 :
  (forall r:('a, 'b) tuple2 set. forall u:'a set. forall v:'b set. (subset(r,
  times(u, v)) ->
  (forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  r) -> mem(y, v)))))

axiom subset_of_times161 :
  (forall r:('a, 'b) tuple2 set. forall u:'a set. forall v:'b set.
  ((forall x:'a. forall y:'b. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
   r) -> (mem(x, u) and mem(y, v)))) ->
  subset(r, times(u, v))))

axiom apply_times :
  (forall s:'a set. forall x:'a. forall y:'b [apply(times(s, add(y,
  (empty : 'b set))), x)]. (mem(x, s) -> (apply(times(s, add(y,
  (empty : 'b set))), x) = y)))

logic infix_lspl : ('a, 'b) tuple2 set, ('a, 'b) tuple2 set -> ('a,
  'b) tuple2 set

axiom overriding_def159 :
  (forall x:'a. forall y:'b. forall q:('a, 'b) tuple2 set. forall r:('a,
  'b) tuple2 set. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  infix_lspl(q, r)) -> (mem(x, dom(r)) -> mem({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = y }, r))))

axiom overriding_def160 :
  (forall x:'a. forall y:'b. forall q:('a, 'b) tuple2 set. forall r:('a,
  'b) tuple2 set. (mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y },
  infix_lspl(q, r)) -> ((not mem(x, dom(r))) -> mem({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = y }, q))))

axiom overriding_def161 :
  (forall x:'a. forall y:'b. forall q:('a, 'b) tuple2 set. forall r:('a,
  'b) tuple2 set. (((mem(x, dom(r)) and mem({ Tuple2_proj_1 = x;
  Tuple2_proj_2 = y }, r)) or ((not mem(x, dom(r))) and mem({ Tuple2_proj_1 =
  x; Tuple2_proj_2 = y }, q))) -> mem({ Tuple2_proj_1 = x; Tuple2_proj_2 = y
  }, infix_lspl(q, r))))

axiom function_overriding :
  (forall s:'a set. forall t:'b set. forall f:('a, 'b) tuple2 set.
  forall g:('a, 'b) tuple2 set. ((mem(f, infix_plmngt(s, t)) and mem(g,
  infix_plmngt(s, t))) -> mem(infix_lspl(f, g), infix_plmngt(s, t))))

axiom dom_overriding :
  (forall f:('a, 'b) tuple2 set. forall g:('a, 'b) tuple2 set
  [dom(infix_lspl(f, g))]. (dom(infix_lspl(f, g)) = union(dom(f), dom(g))))

axiom apply_overriding_1 :
  (forall s:'a set. forall t:'b set. forall f:('a, 'b) tuple2 set.
  forall g:('a, 'b) tuple2 set. forall x:'a [mem(f, infix_plmngt(s, t)),
  mem(g, infix_plmngt(s, t)), apply(infix_lspl(f, g), x)]. ((mem(f,
  infix_plmngt(s, t)) and mem(g, infix_plmngt(s, t))) -> (mem(x, dom(g)) ->
  (apply(infix_lspl(f, g), x) = apply(g, x)))))

axiom apply_overriding_2 :
  (forall s:'a set. forall t:'b set. forall f:('a, 'b) tuple2 set.
  forall g:('a, 'b) tuple2 set. forall x:'a [mem(f, infix_plmngt(s, t)),
  apply(infix_lspl(f, g), x)| mem(g, infix_plmngt(s, t)), apply(infix_lspl(f,
  g), x)]. ((mem(f, infix_plmngt(s, t)) and mem(g, infix_plmngt(s, t))) ->
  ((not mem(x, dom(g))) -> (mem(x, dom(f)) -> (apply(infix_lspl(f, g),
  x) = apply(f, x))))))

type uninterpreted_type

type enum_ETAT_AUTOMATE = E_Traitement_carte | E_Traitement_code
  | E_Traitement_somme | E_Distribution_billets | E_Restitution_carte
  | E_Confiscation_carte | E_Veille

logic match_enum_ETAT_AUTOMATE : enum_ETAT_AUTOMATE, 'a, 'a, 'a, 'a, 'a, 'a,
  'a -> 'a

axiom match_enum_ETAT_AUTOMATE_E_Traitement_carte :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. (match_enum_ETAT_AUTOMATE(E_Traitement_carte,
  z, z1, z2, z3, z4, z5, z6) = z))

axiom match_enum_ETAT_AUTOMATE_E_Traitement_code :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. (match_enum_ETAT_AUTOMATE(E_Traitement_code, z,
  z1, z2, z3, z4, z5, z6) = z1))

axiom match_enum_ETAT_AUTOMATE_E_Traitement_somme :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. (match_enum_ETAT_AUTOMATE(E_Traitement_somme,
  z, z1, z2, z3, z4, z5, z6) = z2))

axiom match_enum_ETAT_AUTOMATE_E_Distribution_billets :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a.
  (match_enum_ETAT_AUTOMATE(E_Distribution_billets, z, z1, z2, z3, z4, z5,
  z6) = z3))

axiom match_enum_ETAT_AUTOMATE_E_Restitution_carte :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. (match_enum_ETAT_AUTOMATE(E_Restitution_carte,
  z, z1, z2, z3, z4, z5, z6) = z4))

axiom match_enum_ETAT_AUTOMATE_E_Confiscation_carte :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. (match_enum_ETAT_AUTOMATE(E_Confiscation_carte,
  z, z1, z2, z3, z4, z5, z6) = z5))

axiom match_enum_ETAT_AUTOMATE_E_Veille :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. (match_enum_ETAT_AUTOMATE(E_Veille, z, z1, z2,
  z3, z4, z5, z6) = z6))

logic set_enum_ETAT_AUTOMATE : enum_ETAT_AUTOMATE set

axiom set_enum_ETAT_AUTOMATE_axiom :
  (forall x:enum_ETAT_AUTOMATE. mem(x, set_enum_ETAT_AUTOMATE))

type enum_ETAT_DAB = E_Hors_service | E_En_service

logic match_enum_ETAT_DAB : enum_ETAT_DAB, 'a, 'a -> 'a

axiom match_enum_ETAT_DAB_E_Hors_service :
  (forall z:'a. forall z1:'a. (match_enum_ETAT_DAB(E_Hors_service, z,
  z1) = z))

axiom match_enum_ETAT_DAB_E_En_service :
  (forall z:'a. forall z1:'a. (match_enum_ETAT_DAB(E_En_service, z,
  z1) = z1))

logic set_enum_ETAT_DAB : enum_ETAT_DAB set

axiom set_enum_ETAT_DAB_axiom :
  (forall x:enum_ETAT_DAB. mem(x, set_enum_ETAT_DAB))

type enum_STATUT = E_Valide | E_Invalide | E_Illisible | E_Interdite
  | E_Perimee | E_Epuisee | E_Nouvel | E_Dernier | E_Hors_delai | E_Incident

logic match_enum_STATUT : enum_STATUT, 'a, 'a, 'a, 'a, 'a, 'a, 'a, 'a, 'a,
  'a -> 'a

axiom match_enum_STATUT_E_Valide :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Valide, z, z1, z2, z3, z4, z5, z6, z7, z8, z9) = z))

axiom match_enum_STATUT_E_Invalide :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Invalide, z, z1, z2, z3, z4, z5, z6, z7, z8,
  z9) = z1))

axiom match_enum_STATUT_E_Illisible :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Illisible, z, z1, z2, z3, z4, z5, z6, z7, z8,
  z9) = z2))

axiom match_enum_STATUT_E_Interdite :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Interdite, z, z1, z2, z3, z4, z5, z6, z7, z8,
  z9) = z3))

axiom match_enum_STATUT_E_Perimee :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Perimee, z, z1, z2, z3, z4, z5, z6, z7, z8, z9) = z4))

axiom match_enum_STATUT_E_Epuisee :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Epuisee, z, z1, z2, z3, z4, z5, z6, z7, z8, z9) = z5))

axiom match_enum_STATUT_E_Nouvel :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Nouvel, z, z1, z2, z3, z4, z5, z6, z7, z8, z9) = z6))

axiom match_enum_STATUT_E_Dernier :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Dernier, z, z1, z2, z3, z4, z5, z6, z7, z8, z9) = z7))

axiom match_enum_STATUT_E_Hors_delai :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Hors_delai, z, z1, z2, z3, z4, z5, z6, z7, z8,
  z9) = z8))

axiom match_enum_STATUT_E_Incident :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  forall z5:'a. forall z6:'a. forall z7:'a. forall z8:'a. forall z9:'a.
  (match_enum_STATUT(E_Incident, z, z1, z2, z3, z4, z5, z6, z7, z8,
  z9) = z9))

logic set_enum_STATUT : enum_STATUT set

axiom set_enum_STATUT_axiom : (forall x:enum_STATUT. mem(x, set_enum_STATUT))

predicate f1(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((mem(v_D_min, integer) and
  (0 <= v_D_min)) and (v_D_min <= 2147483647)) and mem(v_D_max, integer)) and
  (0 <= v_D_max)) and (v_D_max <= 2147483647)) and
  ((v_D_min + 1) <= v_D_max)) and infix_eqeq(v_DATE, mk(v_D_min,
  v_D_max))) and mem(v_K0, v_CARTE)) and mem(v_HS, v_CARTE)) and
  (not (v_K0 = v_HS))) and mem(v_CARTE, finite_subsets(integer))) and
  (not infix_eqeq(v_CARTE, (empty : int set))))

predicate f2(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((mem(v_date, v_DATE) and
  mem(v_clients, power(diff(v_CARTE, union(add(v_K0, (empty : int set)),
  add(v_HS, (empty : int set))))))) and mem(v_comptes,
  infix_plmngt(v_clients, nat))) and infix_eqeq(dom(v_comptes),
  v_clients)) and mem(v_interdits, power(v_clients))) and
  ((v_b_carte_1 = false) -> (v_b_verrous_1 = false))) and mem(v_lectdelai_1,
  integer)) and (0 <= v_lectdelai_1)) and (v_lectdelai_1 <= 2147483647)) and
  ((v_lectfin_delai_1 = false) -> (1 <= v_lectdelai_1))) and
  ((1 <= v_lectdelai_1) -> (v_lectfin_delai_1 = false)))

predicate f5(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = mem(0, integer)

predicate f10(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((mem(v_carte_1, v_CARTE) and
  mem(v_cde_carte_1, mk(0, 9999))) and mem(v_date_validite_1, v_DATE)) and
  ((v_carte_1 = v_K0) -> (v_b_carte_1 = false))) and
  ((v_b_carte_1 = false) -> (v_carte_1 = v_K0))) and
  (v_lisible = v_lisible_1)) and (v_carte = v_carte_1)) and
  (v_cde_carte = v_cde_carte_1)) and (v_date_validite = v_date_validite_1))

predicate f13(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (not (v_carte_1 = v_K0))

predicate f14(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (not (v_carte_1 = v_K0))

predicate f16(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (v_carte_1 = v_K0)

predicate f17(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0)))

predicate f19(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false)))

predicate f20(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = mem((v_delai_0 - 1), integer)

predicate f21(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (0 <= (v_delai_0 - 1))

predicate f22(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and (v_fin = false))

predicate f23(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (1 <= (v_delai_0 - 1))

predicate f24(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and (1 <= (v_delai_0 - 1)))

predicate f26(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = false)) and (v_ii_0 = false))

predicate f28(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = false)) and (v_ii_0 = false))

predicate f30(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = false)) and (v_ii_0 = false)) and
  ((v_fin_0 = false) -> (2 <= v_lectdelai_2))) and ((2 <= v_lectdelai_2) ->
  (v_fin_0 = false)))

predicate f31(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) =
  (((v_lectdelai_2 - 1) + 1) <= v_lectdelai_2)

predicate f32(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = mem((v_lectdelai_2 - 1), integer)

predicate f33(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (0 <= (v_lectdelai_2 - 1))

predicate f34(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) =
  ((((((((((((((((((v_carte_1 = v_K0) and mem(v_delai_0, integer)) and
  (0 <= v_delai_0)) and (v_delai_0 <= 2147483647)) and
  (not (v_delai_0 = 0))) and ((v_fin = false) -> (2 <= v_delai_0))) and
  ((2 <= v_delai_0) -> (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = false)) and (v_ii_0 = false)) and
  ((v_fin_0 = false) -> (2 <= v_lectdelai_2))) and ((2 <= v_lectdelai_2) ->
  (v_fin_0 = false))) and (v_fin_0 = false))

predicate f35(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (1 <= (v_lectdelai_2 - 1))

predicate f36(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) =
  ((((((((((((((((((v_carte_1 = v_K0) and mem(v_delai_0, integer)) and
  (0 <= v_delai_0)) and (v_delai_0 <= 2147483647)) and
  (not (v_delai_0 = 0))) and ((v_fin = false) -> (2 <= v_delai_0))) and
  ((2 <= v_delai_0) -> (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = false)) and (v_ii_0 = false)) and
  ((v_fin_0 = false) -> (2 <= v_lectdelai_2))) and ((2 <= v_lectdelai_2) ->
  (v_fin_0 = false))) and (1 <= (v_lectdelai_2 - 1)))

predicate f38(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((v_carte_1 = v_K0) and
  mem(v_lectdelaiz_7778, integer)) and (0 <= v_lectdelaiz_7778)) and
  ((v_lectfin_delaiz_7778 = false) -> (1 <= v_lectdelaiz_7778))) and
  ((1 <= v_lectdelaiz_7778) -> (v_lectfin_delaiz_7778 = false))) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and mem(0, integer))

predicate f41(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((((v_carte_1 = v_K0) and
  (not ((v_ii_7777 = false) and (v_lectfin_delaiz_7778 = false)))) and
  mem(v_lectdelaiz_7778, integer)) and (0 <= v_lectdelaiz_7778)) and
  ((v_lectfin_delaiz_7778 = false) -> (1 <= v_lectdelaiz_7778))) and
  ((1 <= v_lectdelaiz_7778) -> (v_lectfin_delaiz_7778 = false))) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and (not (v_ii_7777 = true))) and mem(0, integer))

predicate f44(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((v_carte_1 = v_K0) and
  (not (((v_pre_7777 = false) and (v_ii_7777 = false)) and
  (v_lectfin_delaiz_7778 = false)))) and mem(v_lectdelaiz_7778, integer)) and
  (0 <= v_lectdelaiz_7778)) and ((v_lectfin_delaiz_7778 = false) ->
  (1 <= v_lectdelaiz_7778))) and ((1 <= v_lectdelaiz_7778) ->
  (v_lectfin_delaiz_7778 = false))) and mem(v_delai_0, integer)) and
  (0 <= v_delai_0)) and (v_delai_0 <= 2147483647)) and
  (not (v_delai_0 = 0))) and ((v_fin = false) -> (2 <= v_delai_0))) and
  ((2 <= v_delai_0) -> (v_fin = false))) and (not (v_ii_7777 = true))) and
  (not (v_pre_7777 = false))) and mem(0, integer))

predicate f46(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (v_carte_1 = v_K0)

predicate f47(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (v_carte_1 = v_K0)

predicate f49(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((v_carte_1 = v_K0) and
  mem(v_nro_carte_0, v_CARTE)) and ((v_pre_0 = false) ->
  (v_nro_carte_0 = v_K0))) and ((v_nro_carte_0 = v_K0) ->
  (v_pre_0 = false))) and mem(v_cdd_0, mk(0, 9999))) and mem(v_lmt_0,
  mk(v_D_min, v_D_max))) and (v_pre_0 = false)) and ((v_pre_0 = false) ->
  (v_b_verrous_1 = false)))

predicate f51(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((v_carte_1 = v_K0) and
  mem(v_nro_carte_0, v_CARTE)) and ((v_pre_0 = false) ->
  (v_nro_carte_0 = v_K0))) and ((v_nro_carte_0 = v_K0) ->
  (v_pre_0 = false))) and mem(v_cdd_0, mk(0, 9999))) and mem(v_lmt_0,
  mk(v_D_min, v_D_max))) and (not (v_pre_0 = false))) and
  ((v_pre_0 = false) -> (v_b_verrous_1 = false)))

predicate f53(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = true))

predicate f55(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = true)) and (E_Valide = E_Incident))

predicate f57(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = true))) and (not (v_carte_1 = v_K0))) and
  (v_lisible_1 = false))

predicate f59(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = true))) and (not (v_carte_1 = v_K0))) and
  (v_lisible_1 = false)) and (E_Illisible = E_Valide))

predicate f61(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = true))) and (not (v_carte_1 = v_K0))) and
  (v_lisible_1 = false)) and (E_Illisible = E_Incident))

predicate f62(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = true))) and (not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = false))))

predicate f64(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = true))) and (not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = false)))) and (E_Incident = E_Valide))

predicate f65(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (not (v_carte_1 = v_K0))

predicate f66(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = true))) and (not ((not (v_carte_1 = v_K0)) and
  (v_lisible_1 = false)))) and (not (v_carte_1 = v_K0))) and
  (v_lisible_1 = true))

predicate f68(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((mem(v_dte, v_DATE) and
  (not (v_carte_1 = v_K0))) and (v_lisible_1 = true))

predicate f69(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((mem(v_dte, v_DATE) and
  (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and mem(v_ctrl,
  union(union(add(E_Valide, (empty : enum_STATUT set)), add(E_Invalide,
  (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (v_ctrl = E_Valide)) and
  ((v_date_validite_1 + 1) <= v_dte))

predicate f71(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((((mem(v_dte,
  v_DATE) and (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and
  mem(v_ctrl, union(union(add(E_Valide, (empty : enum_STATUT set)),
  add(E_Invalide, (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (v_ctrl = E_Valide)) and
  ((v_date_validite_1 + 1) <= v_dte)) and (100 <= apply(v_comptes,
  v_carte_1))) and (v_dte <= v_date_validite_1))

predicate f73(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((((((mem(v_dte, v_DATE) and
  (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and mem(v_ctrl,
  union(union(add(E_Valide, (empty : enum_STATUT set)), add(E_Invalide,
  (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (v_ctrl = E_Valide)) and
  ((v_date_validite_1 + 1) <= v_dte)) and (E_Perimee = E_Valide))

predicate f74(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (100 <= apply(v_comptes, v_carte_1))

predicate f76(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((((((mem(v_dte, v_DATE) and
  (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and mem(v_ctrl,
  union(union(add(E_Valide, (empty : enum_STATUT set)), add(E_Invalide,
  (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (v_ctrl = E_Valide)) and
  (not ((v_date_validite_1 + 1) <= v_dte))) and ((v_sld + 1) <= 100))

predicate f78(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((((((((mem(v_dte,
  v_DATE) and (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and
  mem(v_ctrl, union(union(add(E_Valide, (empty : enum_STATUT set)),
  add(E_Invalide, (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (v_ctrl = E_Valide)) and
  (not ((v_date_validite_1 + 1) <= v_dte))) and ((v_sld + 1) <= 100)) and
  (100 <= apply(v_comptes, v_carte_1))) and (v_dte <= v_date_validite_1))

predicate f80(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((((mem(v_dte,
  v_DATE) and (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and
  mem(v_ctrl, union(union(add(E_Valide, (empty : enum_STATUT set)),
  add(E_Invalide, (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (v_ctrl = E_Valide)) and
  (not ((v_date_validite_1 + 1) <= v_dte))) and ((v_sld + 1) <= 100)) and
  (E_Epuisee = E_Valide))

predicate f81(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((((((mem(v_dte, v_DATE) and
  (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and mem(v_ctrl,
  union(union(add(E_Valide, (empty : enum_STATUT set)), add(E_Invalide,
  (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (v_ctrl = E_Valide)) and
  (not ((v_date_validite_1 + 1) <= v_dte))) and (not ((v_sld + 1) <= 100)))

predicate f83(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((((mem(v_dte, v_DATE) and
  (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and mem(v_ctrl,
  union(union(add(E_Valide, (empty : enum_STATUT set)), add(E_Invalide,
  (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (not (v_ctrl = E_Valide)))

predicate f84(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((((((((mem(v_dte,
  v_DATE) and (not (v_carte_1 = v_K0))) and (v_lisible_1 = true)) and
  mem(v_ctrl, union(union(add(E_Valide, (empty : enum_STATUT set)),
  add(E_Invalide, (empty : enum_STATUT set))), add(E_Interdite,
  (empty : enum_STATUT set))))) and mem(v_sld, integer)) and
  (0 <= v_sld)) and (v_sld <= 2147483647)) and ((mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))) ->
  (v_ctrl = E_Valide))) and ((v_ctrl = E_Valide) -> (mem(v_carte_1,
  v_clients) and (not mem(v_carte_1, v_interdits))))) and (mem(v_carte_1,
  v_interdits) -> (v_ctrl = E_Interdite))) and ((v_ctrl = E_Interdite) ->
  mem(v_carte_1, v_interdits))) and ((not mem(v_carte_1, v_clients)) ->
  (v_ctrl = E_Invalide))) and ((v_ctrl = E_Invalide) -> (not mem(v_carte_1,
  v_clients)))) and (mem(v_carte_1, v_clients) -> (v_sld = apply(v_comptes,
  v_carte_1)))) and (not (v_ctrl = E_Valide))) and mem(v_carte_1,
  v_clients)) and (not mem(v_carte_1, v_interdits))) and
  (100 <= apply(v_comptes, v_carte_1))) and (v_dte <= v_date_validite_1))

predicate f89(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (not (v_carte_1 = v_K0))

predicate f90(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (not (v_carte_1 = v_K0))

predicate f91(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (v_carte_1 = v_K0)

predicate f92(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0)))

predicate f93(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false)))

predicate f94(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and (v_fin = false))

predicate f95(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and (1 <= (v_delai_0 - 1)))

predicate f96(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = true)) and (v_ii_0 = false))

predicate f97(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = true)) and (v_ii_0 = false))

predicate f98(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((((v_carte_1 = v_K0) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = true)) and (v_ii_0 = false)) and
  ((v_fin_0 = false) -> (2 <= v_lectdelai_2))) and ((2 <= v_lectdelai_2) ->
  (v_fin_0 = false)))

predicate f99(v_val_0: bool, v_tst_lct_0: bool, v_sld: int, v_pre_7777: bool,
  v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int, v_lmt_0: int,
  v_lisible_1: bool, v_lisible: bool, v_lectfin_delaiz_7778: bool,
  v_lectfin_delai_2: bool, v_lectfin_delai_1: bool, v_lectfin_delai: bool,
  v_lectdelaiz_7778: int, v_lectdelai_2: int, v_lectdelai_1: int,
  v_lectdelai: int, v_interdits: int set, v_ii_7777: bool, v_ii_0: bool,
  v_fin_del_0: bool, v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) =
  ((((((((((((((((((v_carte_1 = v_K0) and mem(v_delai_0, integer)) and
  (0 <= v_delai_0)) and (v_delai_0 <= 2147483647)) and
  (not (v_delai_0 = 0))) and ((v_fin = false) -> (2 <= v_delai_0))) and
  ((2 <= v_delai_0) -> (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = true)) and (v_ii_0 = false)) and
  ((v_fin_0 = false) -> (2 <= v_lectdelai_2))) and ((2 <= v_lectdelai_2) ->
  (v_fin_0 = false))) and (v_fin_0 = false))

predicate f100(v_val_0: bool, v_tst_lct_0: bool, v_sld: int,
  v_pre_7777: bool, v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int,
  v_lmt_0: int, v_lisible_1: bool, v_lisible: bool,
  v_lectfin_delaiz_7778: bool, v_lectfin_delai_2: bool,
  v_lectfin_delai_1: bool, v_lectfin_delai: bool, v_lectdelaiz_7778: int,
  v_lectdelai_2: int, v_lectdelai_1: int, v_lectdelai: int,
  v_interdits: int set, v_ii_7777: bool, v_ii_0: bool, v_fin_del_0: bool,
  v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) =
  ((((((((((((((((((v_carte_1 = v_K0) and mem(v_delai_0, integer)) and
  (0 <= v_delai_0)) and (v_delai_0 <= 2147483647)) and
  (not (v_delai_0 = 0))) and ((v_fin = false) -> (2 <= v_delai_0))) and
  ((2 <= v_delai_0) -> (v_fin = false))) and mem(v_lectdelai_2, integer)) and
  (0 <= v_lectdelai_2)) and ((v_lectfin_delai_2 = false) ->
  (1 <= v_lectdelai_2))) and ((1 <= v_lectdelai_2) ->
  (v_lectfin_delai_2 = false))) and (v_fin_del_0 = v_lectfin_delai_2)) and
  (v_fin_del_0 = false)) and (v_pre_0 = true)) and (v_ii_0 = false)) and
  ((v_fin_0 = false) -> (2 <= v_lectdelai_2))) and ((2 <= v_lectdelai_2) ->
  (v_fin_0 = false))) and (1 <= (v_lectdelai_2 - 1)))

predicate f101(v_val_0: bool, v_tst_lct_0: bool, v_sld: int,
  v_pre_7777: bool, v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int,
  v_lmt_0: int, v_lisible_1: bool, v_lisible: bool,
  v_lectfin_delaiz_7778: bool, v_lectfin_delai_2: bool,
  v_lectfin_delai_1: bool, v_lectfin_delai: bool, v_lectdelaiz_7778: int,
  v_lectdelai_2: int, v_lectdelai_1: int, v_lectdelai: int,
  v_interdits: int set, v_ii_7777: bool, v_ii_0: bool, v_fin_del_0: bool,
  v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((v_carte_1 = v_K0) and
  mem(v_lectdelaiz_7778, integer)) and (0 <= v_lectdelaiz_7778)) and
  ((v_lectfin_delaiz_7778 = false) -> (1 <= v_lectdelaiz_7778))) and
  ((1 <= v_lectdelaiz_7778) -> (v_lectfin_delaiz_7778 = false))) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and mem(0, integer))

predicate f102(v_val_0: bool, v_tst_lct_0: bool, v_sld: int,
  v_pre_7777: bool, v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int,
  v_lmt_0: int, v_lisible_1: bool, v_lisible: bool,
  v_lectfin_delaiz_7778: bool, v_lectfin_delai_2: bool,
  v_lectfin_delai_1: bool, v_lectfin_delai: bool, v_lectdelaiz_7778: int,
  v_lectdelai_2: int, v_lectdelai_1: int, v_lectdelai: int,
  v_interdits: int set, v_ii_7777: bool, v_ii_0: bool, v_fin_del_0: bool,
  v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((((((((((((((v_carte_1 = v_K0) and
  (not ((v_ii_7777 = false) and (v_lectfin_delaiz_7778 = false)))) and
  mem(v_lectdelaiz_7778, integer)) and (0 <= v_lectdelaiz_7778)) and
  ((v_lectfin_delaiz_7778 = false) -> (1 <= v_lectdelaiz_7778))) and
  ((1 <= v_lectdelaiz_7778) -> (v_lectfin_delaiz_7778 = false))) and
  mem(v_delai_0, integer)) and (0 <= v_delai_0)) and
  (v_delai_0 <= 2147483647)) and (not (v_delai_0 = 0))) and
  ((v_fin = false) -> (2 <= v_delai_0))) and ((2 <= v_delai_0) ->
  (v_fin = false))) and (not (v_ii_7777 = true))) and mem(0, integer))

predicate f103(v_val_0: bool, v_tst_lct_0: bool, v_sld: int,
  v_pre_7777: bool, v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int,
  v_lmt_0: int, v_lisible_1: bool, v_lisible: bool,
  v_lectfin_delaiz_7778: bool, v_lectfin_delai_2: bool,
  v_lectfin_delai_1: bool, v_lectfin_delai: bool, v_lectdelaiz_7778: int,
  v_lectdelai_2: int, v_lectdelai_1: int, v_lectdelai: int,
  v_interdits: int set, v_ii_7777: bool, v_ii_0: bool, v_fin_del_0: bool,
  v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (((((((((((((((v_carte_1 = v_K0) and
  (not (((v_pre_7777 = true) and (v_ii_7777 = false)) and
  (v_lectfin_delaiz_7778 = false)))) and mem(v_lectdelaiz_7778, integer)) and
  (0 <= v_lectdelaiz_7778)) and ((v_lectfin_delaiz_7778 = false) ->
  (1 <= v_lectdelaiz_7778))) and ((1 <= v_lectdelaiz_7778) ->
  (v_lectfin_delaiz_7778 = false))) and mem(v_delai_0, integer)) and
  (0 <= v_delai_0)) and (v_delai_0 <= 2147483647)) and
  (not (v_delai_0 = 0))) and ((v_fin = false) -> (2 <= v_delai_0))) and
  ((2 <= v_delai_0) -> (v_fin = false))) and (not (v_ii_7777 = true))) and
  (not (v_pre_7777 = true))) and mem(0, integer))

predicate f104(v_val_0: bool, v_tst_lct_0: bool, v_sld: int,
  v_pre_7777: bool, v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int,
  v_lmt_0: int, v_lisible_1: bool, v_lisible: bool,
  v_lectfin_delaiz_7778: bool, v_lectfin_delai_2: bool,
  v_lectfin_delai_1: bool, v_lectfin_delai: bool, v_lectdelaiz_7778: int,
  v_lectdelai_2: int, v_lectdelai_1: int, v_lectdelai: int,
  v_interdits: int set, v_ii_7777: bool, v_ii_0: bool, v_fin_del_0: bool,
  v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((v_carte_1 = v_K0) and
  (v_pre_1 = true))

predicate f106(v_val_0: bool, v_tst_lct_0: bool, v_sld: int,
  v_pre_7777: bool, v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int,
  v_lmt_0: int, v_lisible_1: bool, v_lisible: bool,
  v_lectfin_delaiz_7778: bool, v_lectfin_delai_2: bool,
  v_lectfin_delai_1: bool, v_lectfin_delai: bool, v_lectdelaiz_7778: int,
  v_lectdelai_2: int, v_lectdelai_1: int, v_lectdelai: int,
  v_interdits: int set, v_ii_7777: bool, v_ii_0: bool, v_fin_del_0: bool,
  v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = ((not (v_pre_1 = true)) and
  (v_carte_1 = v_K0))

predicate f108(v_val_0: bool, v_tst_lct_0: bool, v_sld: int,
  v_pre_7777: bool, v_pre_1: bool, v_pre_0: bool, v_nro_carte_0: int,
  v_lmt_0: int, v_lisible_1: bool, v_lisible: bool,
  v_lectfin_delaiz_7778: bool, v_lectfin_delai_2: bool,
  v_lectfin_delai_1: bool, v_lectfin_delai: bool, v_lectdelaiz_7778: int,
  v_lectdelai_2: int, v_lectdelai_1: int, v_lectdelai: int,
  v_interdits: int set, v_ii_7777: bool, v_ii_0: bool, v_fin_del_0: bool,
  v_fin_0: bool, v_fin: bool, v_dte: int, v_delai_0: int,
  v_date_validite_1: int, v_date_validite: int, v_date: int,
  v_ctrl: enum_STATUT, v_comptes: (int, int) tuple2 set, v_clients: int set,
  v_cde_carte_1: int, v_cde_carte: int, v_cdd_0: int, v_carte_1: int,
  v_carte: int, v_b_verrous_1: bool, v_b_verrous: bool, v_b_carte_1: bool,
  v_b_carte: bool, v_K0: int, v_HS: int, v_D_min: int, v_D_max: int,
  v_DATE: int set, v_CARTE: int set) = (not (v_carte_1 = v_K0))

goal restitution_carte_1 :
  (forall v_val_0:bool. forall v_tst_lct_0:bool. forall v_sld:int.
  forall v_pre_7777:bool. forall v_pre_1:bool. forall v_pre_0:bool.
  forall v_nro_carte_0:int. forall v_lmt_0:int. forall v_lisible_1:bool.
  forall v_lisible:bool. forall v_lectfin_delaiz_7778:bool.
  forall v_lectfin_delai_2:bool. forall v_lectfin_delai_1:bool.
  forall v_lectfin_delai:bool. forall v_lectdelaiz_7778:int.
  forall v_lectdelai_2:int. forall v_lectdelai_1:int. forall v_lectdelai:int.
  forall v_interdits:int set. forall v_ii_7777:bool. forall v_ii_0:bool.
  forall v_fin_del_0:bool. forall v_fin_0:bool. forall v_fin:bool.
  forall v_dte:int. forall v_delai_0:int. forall v_date_validite_1:int.
  forall v_date_validite:int. forall v_date:int. forall v_ctrl:enum_STATUT.
  forall v_comptes:(int, int) tuple2 set. forall v_clients:int set.
  forall v_cde_carte_1:int. forall v_cde_carte:int. forall v_cdd_0:int.
  forall v_carte_1:int. forall v_carte:int. forall v_b_verrous_1:bool.
  forall v_b_verrous:bool. forall v_b_carte_1:bool. forall v_b_carte:bool.
  forall v_K0:int. forall v_HS:int. forall v_D_min:int. forall v_D_max:int.
  forall v_DATE:int set. forall v_CARTE:int set. ((f1(v_val_0, v_tst_lct_0,
  v_sld, v_pre_7777, v_pre_1, v_pre_0, v_nro_carte_0, v_lmt_0, v_lisible_1,
  v_lisible, v_lectfin_delaiz_7778, v_lectfin_delai_2, v_lectfin_delai_1,
  v_lectfin_delai, v_lectdelaiz_7778, v_lectdelai_2, v_lectdelai_1,
  v_lectdelai, v_interdits, v_ii_7777, v_ii_0, v_fin_del_0, v_fin_0, v_fin,
  v_dte, v_delai_0, v_date_validite_1, v_date_validite, v_date, v_ctrl,
  v_comptes, v_clients, v_cde_carte_1, v_cde_carte, v_cdd_0, v_carte_1,
  v_carte, v_b_verrous_1, v_b_verrous, v_b_carte_1, v_b_carte, v_K0, v_HS,
  v_D_min, v_D_max, v_DATE, v_CARTE) and (f2(v_val_0, v_tst_lct_0, v_sld,
  v_pre_7777, v_pre_1, v_pre_0, v_nro_carte_0, v_lmt_0, v_lisible_1,
  v_lisible, v_lectfin_delaiz_7778, v_lectfin_delai_2, v_lectfin_delai_1,
  v_lectfin_delai, v_lectdelaiz_7778, v_lectdelai_2, v_lectdelai_1,
  v_lectdelai, v_interdits, v_ii_7777, v_ii_0, v_fin_del_0, v_fin_0, v_fin,
  v_dte, v_delai_0, v_date_validite_1, v_date_validite, v_date, v_ctrl,
  v_comptes, v_clients, v_cde_carte_1, v_cde_carte, v_cdd_0, v_carte_1,
  v_carte, v_b_verrous_1, v_b_verrous, v_b_carte_1, v_b_carte, v_K0, v_HS,
  v_D_min, v_D_max, v_DATE, v_CARTE) and (f10(v_val_0, v_tst_lct_0, v_sld,
  v_pre_7777, v_pre_1, v_pre_0, v_nro_carte_0, v_lmt_0, v_lisible_1,
  v_lisible, v_lectfin_delaiz_7778, v_lectfin_delai_2, v_lectfin_delai_1,
  v_lectfin_delai, v_lectdelaiz_7778, v_lectdelai_2, v_lectdelai_1,
  v_lectdelai, v_interdits, v_ii_7777, v_ii_0, v_fin_del_0, v_fin_0, v_fin,
  v_dte, v_delai_0, v_date_validite_1, v_date_validite, v_date, v_ctrl,
  v_comptes, v_clients, v_cde_carte_1, v_cde_carte, v_cdd_0, v_carte_1,
  v_carte, v_b_verrous_1, v_b_verrous, v_b_carte_1, v_b_carte, v_K0, v_HS,
  v_D_min, v_D_max, v_DATE, v_CARTE) and (f91(v_val_0, v_tst_lct_0, v_sld,
  v_pre_7777, v_pre_1, v_pre_0, v_nro_carte_0, v_lmt_0, v_lisible_1,
  v_lisible, v_lectfin_delaiz_7778, v_lectfin_delai_2, v_lectfin_delai_1,
  v_lectfin_delai, v_lectdelaiz_7778, v_lectdelai_2, v_lectdelai_1,
  v_lectdelai, v_interdits, v_ii_7777, v_ii_0, v_fin_del_0, v_fin_0, v_fin,
  v_dte, v_delai_0, v_date_validite_1, v_date_validite, v_date, v_ctrl,
  v_comptes, v_clients, v_cde_carte_1, v_cde_carte, v_cdd_0, v_carte_1,
  v_carte, v_b_verrous_1, v_b_verrous, v_b_carte_1, v_b_carte, v_K0, v_HS,
  v_D_min, v_D_max, v_DATE, v_CARTE) and f92(v_val_0, v_tst_lct_0, v_sld,
  v_pre_7777, v_pre_1, v_pre_0, v_nro_carte_0, v_lmt_0, v_lisible_1,
  v_lisible, v_lectfin_delaiz_7778, v_lectfin_delai_2, v_lectfin_delai_1,
  v_lectfin_delai, v_lectdelaiz_7778, v_lectdelai_2, v_lectdelai_1,
  v_lectdelai, v_interdits, v_ii_7777, v_ii_0, v_fin_del_0, v_fin_0, v_fin,
  v_dte, v_delai_0, v_date_validite_1, v_date_validite, v_date, v_ctrl,
  v_comptes, v_clients, v_cde_carte_1, v_cde_carte, v_cdd_0, v_carte_1,
  v_carte, v_b_verrous_1, v_b_verrous, v_b_carte_1, v_b_carte, v_K0, v_HS,
  v_D_min, v_D_max, v_DATE, v_CARTE))))) -> (1 <= v_delai_0)))
